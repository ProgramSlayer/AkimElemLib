// <auto-generated />
using System;
using AkimElemLib.Wpf.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AkimElemLib.Wpf.DataAccess.Migrations
{
    [DbContext(typeof(AkimElemLibContext))]
    partial class AkimElemLibContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("AkimElemLib.Wpf.Models.Intruders.Intruder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("DropEquipmentProbability")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Intruder", (string)null);
                });

            modelBuilder.Entity("AkimElemLib.Wpf.Models.SpecificObjects.SpecificObjectBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Height")
                        .HasColumnType("REAL");

                    b.Property<double>("HeightRelativeToGround")
                        .HasColumnType("REAL");

                    b.Property<double>("MaxVelocity")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Transparency")
                        .HasColumnType("REAL");

                    b.Property<int>("VelocityMeasureUnit")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SpecificObjectBase", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("SpecificObjectBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AkimElemLib.Wpf.Models.SpecificObjects.AerialConstructions.AerialConstruction", b =>
                {
                    b.HasBaseType("AkimElemLib.Wpf.Models.SpecificObjects.SpecificObjectBase");

                    b.HasDiscriminator().HasValue("AerialConstruction");
                });

            modelBuilder.Entity("AkimElemLib.Wpf.Models.SpecificObjects.Buildings.Building", b =>
                {
                    b.HasBaseType("AkimElemLib.Wpf.Models.SpecificObjects.SpecificObjectBase");

                    b.HasDiscriminator().HasValue("Building");
                });

            modelBuilder.Entity("AkimElemLib.Wpf.Models.SpecificObjects.SpecificAreas.SpecificArea", b =>
                {
                    b.HasBaseType("AkimElemLib.Wpf.Models.SpecificObjects.SpecificObjectBase");

                    b.HasDiscriminator().HasValue("SpecificArea");
                });

            modelBuilder.Entity("AkimElemLib.Wpf.Models.Intruders.Intruder", b =>
                {
                    b.OwnsOne("AkimElemLib.Wpf.Models.Intruders.IntruderEquipmentParams", "HeavyEquipment", b1 =>
                        {
                            b1.Property<Guid>("IntruderId")
                                .HasColumnType("TEXT");

                            b1.Property<bool>("IsUsed")
                                .HasColumnType("INTEGER");

                            b1.Property<double>("ObstacleOvercomeTimeDecreaseCoefficient")
                                .HasColumnType("REAL");

                            b1.Property<double>("VelocityDecreaseCoefficient")
                                .HasColumnType("REAL");

                            b1.HasKey("IntruderId");

                            b1.ToTable("Intruder");

                            b1.WithOwner()
                                .HasForeignKey("IntruderId");
                        });

                    b.OwnsOne("AkimElemLib.Wpf.Models.Intruders.IntruderDimensionsParams", "HeightParams", b1 =>
                        {
                            b1.Property<Guid>("IntruderId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("CrawlingMm")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("DeepSquatMm")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("FullHeightMm")
                                .HasColumnType("INTEGER");

                            b1.HasKey("IntruderId");

                            b1.ToTable("Intruder");

                            b1.WithOwner()
                                .HasForeignKey("IntruderId");
                        });

                    b.OwnsOne("AkimElemLib.Wpf.Models.Intruders.IntruderDimensionsParams", "LengthParams", b1 =>
                        {
                            b1.Property<Guid>("IntruderId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("CrawlingMm")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("DeepSquatMm")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("FullHeightMm")
                                .HasColumnType("INTEGER");

                            b1.HasKey("IntruderId");

                            b1.ToTable("Intruder");

                            b1.WithOwner()
                                .HasForeignKey("IntruderId");
                        });

                    b.OwnsOne("AkimElemLib.Wpf.Models.Intruders.IntruderEquipmentParams", "LightEquipment", b1 =>
                        {
                            b1.Property<Guid>("IntruderId")
                                .HasColumnType("TEXT");

                            b1.Property<bool>("IsUsed")
                                .HasColumnType("INTEGER");

                            b1.Property<double>("ObstacleOvercomeTimeDecreaseCoefficient")
                                .HasColumnType("REAL");

                            b1.Property<double>("VelocityDecreaseCoefficient")
                                .HasColumnType("REAL");

                            b1.HasKey("IntruderId");

                            b1.ToTable("Intruder");

                            b1.WithOwner()
                                .HasForeignKey("IntruderId");
                        });

                    b.OwnsOne("AkimElemLib.Wpf.Models.Intruders.IntruderEquipmentParams", "MediumEquipment", b1 =>
                        {
                            b1.Property<Guid>("IntruderId")
                                .HasColumnType("TEXT");

                            b1.Property<bool>("IsUsed")
                                .HasColumnType("INTEGER");

                            b1.Property<double>("ObstacleOvercomeTimeDecreaseCoefficient")
                                .HasColumnType("REAL");

                            b1.Property<double>("VelocityDecreaseCoefficient")
                                .HasColumnType("REAL");

                            b1.HasKey("IntruderId");

                            b1.ToTable("Intruder");

                            b1.WithOwner()
                                .HasForeignKey("IntruderId");
                        });

                    b.OwnsOne("AkimElemLib.Wpf.Models.Intruders.IntruderDimensionsParams", "WidthParams", b1 =>
                        {
                            b1.Property<Guid>("IntruderId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("CrawlingMm")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("DeepSquatMm")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("FullHeightMm")
                                .HasColumnType("INTEGER");

                            b1.HasKey("IntruderId");

                            b1.ToTable("Intruder");

                            b1.WithOwner()
                                .HasForeignKey("IntruderId");
                        });

                    b.OwnsOne("AkimElemLib.Wpf.Models.Intruders.IntruderAccomplicesParams", "AccomplicesParams", b1 =>
                        {
                            b1.Property<Guid>("IntruderId")
                                .HasColumnType("TEXT");

                            b1.Property<bool>("HasAccomplices")
                                .HasColumnType("INTEGER");

                            b1.Property<double>("Iso2xDelayDropProbability")
                                .HasColumnType("REAL");

                            b1.Property<double>("Sensors2xDetectionDecreaseProbability")
                                .HasColumnType("REAL");

                            b1.Property<double>("TimeTillIntentionalFalseAlarm")
                                .HasColumnType("REAL");

                            b1.HasKey("IntruderId");

                            b1.ToTable("Intruder");

                            b1.WithOwner()
                                .HasForeignKey("IntruderId");
                        });

                    b.OwnsOne("AkimElemLib.Wpf.Models.Intruders.IntruderCarParams", "CarParams", b1 =>
                        {
                            b1.Property<Guid>("IntruderId")
                                .HasColumnType("TEXT");

                            b1.Property<double>("CarDropProbability")
                                .HasColumnType("REAL");

                            b1.Property<bool>("HasCar")
                                .HasColumnType("INTEGER");

                            b1.Property<double>("VelocityIncreaseCoefficient")
                                .HasColumnType("REAL");

                            b1.HasKey("IntruderId");

                            b1.ToTable("Intruder");

                            b1.WithOwner()
                                .HasForeignKey("IntruderId");
                        });

                    b.OwnsOne("AkimElemLib.Wpf.Models.Intruders.IntruderPsychophysicalParams", "PsychophysicalParams", b1 =>
                        {
                            b1.Property<Guid>("IntruderId")
                                .HasColumnType("TEXT");

                            b1.Property<double>("AerialConstructionIntrusionProbability")
                                .HasColumnType("REAL");

                            b1.Property<double>("CautionDropTo0Probability")
                                .HasColumnType("REAL");

                            b1.Property<double>("IntrusionRefusalProbability")
                                .HasColumnType("REAL");

                            b1.Property<double>("MaxRunawayDistance")
                                .HasColumnType("REAL");

                            b1.Property<double>("MinRunawayDistance")
                                .HasColumnType("REAL");

                            b1.Property<double>("MovementDirectionChangeProbability")
                                .HasColumnType("REAL");

                            b1.Property<int>("ObjectTerritoryKnowledgePercent")
                                .HasColumnType("INTEGER");

                            b1.Property<double>("UnnoticedIntrusionProbability")
                                .HasColumnType("REAL");

                            b1.Property<double>("VelocityChangeProbability")
                                .HasColumnType("REAL");

                            b1.Property<double>("VelocityIncreaseProbability")
                                .HasColumnType("REAL");

                            b1.HasKey("IntruderId");

                            b1.ToTable("Intruder");

                            b1.WithOwner()
                                .HasForeignKey("IntruderId");
                        });

                    b.OwnsOne("AkimElemLib.Wpf.Models.Intruders.IntruderVelocityParams", "VelocityParams", b1 =>
                        {
                            b1.Property<Guid>("IntruderId")
                                .HasColumnType("TEXT");

                            b1.Property<double>("MaxVelocity")
                                .HasColumnType("REAL");

                            b1.Property<double>("MinVelocity")
                                .HasColumnType("REAL");

                            b1.Property<int>("VelocityMeasureUnit")
                                .HasColumnType("INTEGER");

                            b1.HasKey("IntruderId");

                            b1.ToTable("Intruder");

                            b1.WithOwner()
                                .HasForeignKey("IntruderId");
                        });

                    b.Navigation("AccomplicesParams")
                        .IsRequired();

                    b.Navigation("CarParams")
                        .IsRequired();

                    b.Navigation("HeavyEquipment")
                        .IsRequired();

                    b.Navigation("HeightParams")
                        .IsRequired();

                    b.Navigation("LengthParams")
                        .IsRequired();

                    b.Navigation("LightEquipment")
                        .IsRequired();

                    b.Navigation("MediumEquipment")
                        .IsRequired();

                    b.Navigation("PsychophysicalParams")
                        .IsRequired();

                    b.Navigation("VelocityParams")
                        .IsRequired();

                    b.Navigation("WidthParams")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
